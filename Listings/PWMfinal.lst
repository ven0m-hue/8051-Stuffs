C51 COMPILER V9.59.0.0   PWMFINAL                                                          02/27/2020 10:45:32 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE PWMFINAL
OBJECT MODULE PLACED IN .\Objects\PWMfinal.obj
COMPILER INVOKED BY: D:\v\C51\BIN\C51.EXE PWMfinal.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\PWMfin
                    -al.lst) TABS(2) OBJECT(.\Objects\PWMfinal.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          sbit PWM_pin  =  P1^0; //cn6
   4          sbit PWM_00   =  P2^0; 
   5          sbit PWM_20   =  P2^1;
   6          sbit PWM_50   =  P2^2;
   7          sbit PWM_80   =  P2^3;
   8          sbit PWM_100  =  P2^4;
   9          sbit PWM_Full =  P2^5;
  10          
  11          void PWM_low()      // initalization of pwm low 
  12          {                   // pwm low is set to 250us delay. (user defined)
  13   1        PWM_pin = 0;
  14   1        TH0     = 0xFF;    //
  15   1        TL0     = 0x13;    // 
  16   1        TR0     =1;
  17   1        while(!TF0);
  18   1        
  19   1          TF0 = 0;
  20   1          TR0 = 0;
  21   1        
  22   1      }
  23          
  24          void PWM_high()  // just the initialization of pwm high 
  25          {               // duty cycle to be defined later (by calculating for the high time delay) 
  26   1        TR0 = 1;         
  27   1        while(!TF0);
  28   1        
  29   1          TF0 = 0;
  30   1          TR0 = 0;
  31   1        
  32   1      PWM_low();
  33   1        
  34   1      }
  35          /*
  36            Calculations: 1.time frequncy: f of oscillator/ 12 = 11.0592x10^6/12 = 921600
  37                          2.time required to excecute on instrcution = 1/time frequency = 1/921600 = 1.085x10^-6
  38                          3.Delay/time req per inst = 20^10-3/1.085x10^-6 = 18434
  39                          4. 65535(16bit) - 18434 = 47101 >> convert to hex >> B7FD 
  40                          5. TH0 = B7  TL0 = FD 
  41            The above instructions generate required high time delay.
  42          */  
  43          
  44            
  45          void main()
  46          {
  47   1          
  48   1          P1=0x00;  // Port-1 Declared Output
  49   1          P2=0xFF;  // Port-2 Declared Input 
  50   1            
  51   1        TMOD = 0x01;     // 16-bit timmer mode 1
  52   1      
  53   1            // main portion of the prgram, here we set user defined high delays 
  54   1            while(1)
C51 COMPILER V9.59.0.0   PWMFINAL                                                          02/27/2020 10:45:32 PAGE 2   

  55   1            { 
  56   2              if(PWM_00 == 0)      // zero because it is grounded 
  57   2              {                       
  58   3                PWM_pin = 1;
  59   3                TH0     = 0xFF;
  60   3                TL0     = 0xFF;
  61   3                PWM_high();
  62   3              }
  63   2              else if(PWM_20 == 0)
  64   2              {
  65   3                PWM_pin = 1;
  66   3                TH0     = 0xFF;
  67   3                TL0     = 0xCF;
  68   3                PWM_high();
  69   3              }
  70   2              else if(PWM_50 == 0)
  71   2              {
  72   3                PWM_pin = 1;
  73   3                TH0     = 0xFF;
  74   3                TL0     = 0x13;
  75   3                PWM_high();
  76   3              }
  77   2              else if(PWM_80 == 0)
  78   2              {
  79   3                PWM_pin = 1;
  80   3                TH0     = 0xFF;
  81   3                TL0     = 0x42;
  82   3                PWM_high();
  83   3              }
  84   2              else if(PWM_100 == 0)
  85   2              {
  86   3                PWM_pin = 1;
  87   3                TH0     = 0x00;
  88   3                TL0     = 0x00;
  89   3                PWM_high();
  90   3              }
  91   2              else if (PWM_Full == 0)    // just for clarification, not required.
  92   2                {
  93   3                  PWM_pin = 1;
  94   3                }
  95   2              
  96   2            }
  97   1      
  98   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    113    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
